{"ast":null,"code":"var _jsxFileName = \"/Users/gg/dev/egoSurveyReact/egoSurveyReact/src/components/lineBox.jsx\",\n    _s = $RefreshSig$();\n\n/**\n * arranges the nodes in a row so it's possible to select them,\n * once a node is selected it bumps up and changes color\n */\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, DataTable, Button, Text, Layer, Heading, TextInput } from \"grommet\";\nimport { select, drag, forceSimulation, forceManyBody, forceCollide, forceCenter, tickFormat } from 'd3';\nimport useResizeObserver from './useResizeObserver';\nimport { forceLink } from 'd3-force';\nimport { colors } from 'grommet/themes/base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LineBox({\n  nodes\n}) {\n  _s();\n\n  const CIRCLE_RADIUS = 30;\n  const svgRef = useRef(); //gets a ref for the svg in which d3 renders in \n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef); //used to resize \n\n  const [nodesRepresentation, setNodesRepresentation] = React.useState(nodes.map(x => {\n    return {\n      id: x.getName(),\n      selected: false\n    };\n  }));\n  const [boxToDropIn, setBoxToDropIn] = React.useState(\"\");\n  useEffect(() => {\n    console.log(\"use effect box\" + boxToDropIn);\n  }, [boxToDropIn]); // will be called initially and on every data change\n\n  useEffect(() => {\n    if (!dimensions) return;\n    const manualPadding = 100;\n    const nodeOffset = (dimensions.width - 2 * manualPadding) / nodesRepresentation.length;\n    console.log(\"width\", dimensions.width);\n    const svg = select(svgRef.current); // svg.selectAll(\"*\").remove(); //Clear canvas so no duplicates are trailed every refresh\n    // centering workaround\n\n    svg.attr(\"viewBox\", [-dimensions.width / 2, -dimensions.height / 2, dimensions.width, dimensions.height]);\n    drawNodes(svg, nodesRepresentation, nodePositionFuncX, nodePositionFuncY); // .attr(\"transform\", (d,i) => `translate(${d.x = }, ${d.y = 0 })`)\n\n    function nodePositionFuncX(i) {\n      -dimensions.width / 2 + manualPadding + nodeOffset / 2 + i * nodeOffset;\n      return x;\n    }\n\n    function nodePositionFuncY(i) {\n      return 0;\n    }\n\n    function boxMouseOver(event, d) {\n      select(this).selectChild().attr(\"style\", \"fill:blue\");\n      setBoxToDropIn(d.id);\n      console.log(\"box over\");\n      console.log(boxToDropIn);\n      console.log(d.id);\n    }\n\n    function boxMouseOut(Event, d) {\n      select(this).selectChild().attr(\"style\", \"fill:lightgrey\");\n      setBoxToDropIn(\"\");\n      console.log(\"box out\");\n      console.log(boxToDropIn);\n    }\n\n    function dragstarted(event, d) {\n      select(this).raise().attr(\"stroke\", \"black\").style(\"pointer-events\", \"none\");\n    }\n\n    function dragged(event, d) {\n      select(this).attr(\"transform\", () => `translate(${d.x = event.x}, ${d.y = event.y})`);\n    }\n\n    function dragended(event, d) {\n      select(this).attr(\"stroke\", null); //.style(\"pointer-events\", \"auto\");\n\n      console.log(\"dragended\");\n      console.log(boxToDropIn);\n\n      if (boxToDropIn != \"\") {\n        //select prob still doesn t work... \n        // select(boxToDropIn).selectChild()\n        // .style(\"pointer-events\", \"none\")\n        // .attr(\"style\", \"fill:red\")\n        // .attr(\"height\", 200);\n        console.log(\"inside if\");\n        const mycolor = boxes.filter(box => {\n          if (box.id == boxToDropIn) return box.nodeColor;\n        });\n        console.log(\"color \" + mycolor);\n        select(this).attr(\"fill\", mycolor);\n      }\n    }\n\n    const boxes = [{\n      id: \"1\",\n      nodeColor: \"ffa500\"\n    }, {\n      id: \"22\",\n      nodeColor: \"ffa500\"\n    }, {\n      id: \"333\",\n      nodeColor: \"ffa500\"\n    }, {\n      id: \"4444444\",\n      nodeColor: \"ffa500\"\n    }];\n    const manualPaddingBox = 50; //this is extra for outer pad. total outer pad is manual + inner\n\n    const maybeInnerPad = 50;\n    const boxOffset = (dimensions.width - 2 * manualPaddingBox) / boxes.length;\n    const boxWidth = (dimensions.width - 2 * manualPaddingBox - maybeInnerPad * (boxes.length - 1)) / boxes.length;\n    const dropBox = svg.selectAll(\".dropBox\").data(boxes, d => d.id).join(\"g\") //a che serve sto join\n    .attr('class', 'dropBox').attr(\"transform\", (d, i) => `translate(${d.x = -boxWidth / 2 - dimensions.width / 2 + manualPaddingBox + boxOffset / 2 + i * boxOffset}, ${d.y = 100})`).on(\"mouseover\", boxMouseOver).on(\"mouseout\", boxMouseOut);\n    const boxRect = dropBox.append(\"rect\") // pre-defined shape\n    .attr(\"style\", \"fill:lightgrey\") // fill color of shape\n    //.attr(\"x\", x)\t\t\t\t\t\t\t\t// displacement from origin\n    //.attr(\"y\", y)\t\t\t\t\t\t\t\t// displacement from origin\n    .attr(\"rx\", 25) // how much to round corners - to be transitioned below\n    .attr(\"ry\", 25) // how much to round corners - to be transitioned below\n    .attr(\"width\", boxWidth) // size of shape\n    .attr(\"height\", 150);\n    dropBox.append(\"text\").join(\"g\").text(d => d.id).attr(\"x\", boxWidth / 2).attr('text-anchor', 'middle').attr('alignment-baseline', 'middle').style('fill', '#000').style('font-size', '20px');\n    const simulation = forceSimulation(nodesRepresentation);\n    simulation.on(\"tick\", () => {//  // .attr(\"x\", d => (d.index * nodeOffset) + manualPadding - ( -dimensions.width / 2))\n      //   //.attr(\"transform\", d => `translate(${ -((d.index * nodeOffset) + manualPadding - (dimensions.width / 2))}, ${d.selected ? d.y : 100 })`);\n      //console.log(\"simulation nodes \", nodes)\n    });\n  }, [nodesRepresentation, dimensions]); //TODO check if this nodes param here is right and what it does...\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    fill: true,\n    ref: wrapperRef,\n    pad: \"small\",\n    height: \"xxlarge\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 17\n  }, this);\n}\n\n_s(LineBox, \"qmGoXgabMo8zNMICSTFHWf/X01k=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = LineBox;\n\nfunction drawNodes(svg, data, xfunc, yfunc) {\n  const node = svg.selectAll(\".node\").data(data).join(\"g\").attr('class', 'node').attr(\"transform\", (d, i) => `translate(${d.x = xfunc(i)}, ${d.y = yfunc(i)})`).call(drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended));\n  node.append('circle') //.join(\"g\")\n  .attr(\"r\", CIRCLE_RADIUS).attr(\"fill\", function (d) {\n    return '#5b8075';\n  });\n  node.append(\"text\") //.join(\"g\")\n  .text(d => d.id).attr('text-anchor', 'middle').attr('alignment-baseline', 'middle').style('fill', '#000').style('font-size', '20px');\n  return node;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LineBox\");","map":{"version":3,"sources":["/Users/gg/dev/egoSurveyReact/egoSurveyReact/src/components/lineBox.jsx"],"names":["React","useState","useEffect","useRef","Box","DataTable","Button","Text","Layer","Heading","TextInput","select","drag","forceSimulation","forceManyBody","forceCollide","forceCenter","tickFormat","useResizeObserver","forceLink","colors","LineBox","nodes","CIRCLE_RADIUS","svgRef","wrapperRef","dimensions","nodesRepresentation","setNodesRepresentation","map","x","id","getName","selected","boxToDropIn","setBoxToDropIn","console","log","manualPadding","nodeOffset","width","length","svg","current","attr","height","drawNodes","nodePositionFuncX","nodePositionFuncY","i","boxMouseOver","event","d","selectChild","boxMouseOut","Event","dragstarted","raise","style","dragged","y","dragended","mycolor","boxes","filter","box","nodeColor","manualPaddingBox","maybeInnerPad","boxOffset","boxWidth","dropBox","selectAll","data","join","on","boxRect","append","text","simulation","xfunc","yfunc","node","call"],"mappings":"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","sourcesContent":["/**\n * arranges the nodes in a row so it's possible to select them,\n * once a node is selected it bumps up and changes color\n */\n\n import React, { useState, useEffect, useRef} from 'react';\n import { Box, DataTable, Button, Text, Layer, Heading, TextInput } from \"grommet\";\nimport {select, drag, forceSimulation, forceManyBody, forceCollide, forceCenter, tickFormat,} from 'd3'\nimport useResizeObserver from './useResizeObserver'\nimport { forceLink } from 'd3-force';\nimport { colors } from 'grommet/themes/base';\n\n\nexport default function LineBox({\n     nodes,\n    }) {\n    const CIRCLE_RADIUS = 30;\n    const svgRef = useRef(); //gets a ref for the svg in which d3 renders in \n    const wrapperRef = useRef();\n    const dimensions = useResizeObserver(wrapperRef); //used to resize \n    const [nodesRepresentation, setNodesRepresentation] = React.useState(nodes.map(x => {\n      return {\n        id: x.getName(),\n        selected: false\n      }\n    }))\n    const [boxToDropIn, setBoxToDropIn] = React.useState(\"\")\n\n    useEffect(()=> {\n      console.log(\"use effect box\" + boxToDropIn)\n    },[boxToDropIn])\n      // will be called initially and on every data change\n    useEffect(() => {\n      if (!dimensions) return;\n\n        const manualPadding = 100\n        const nodeOffset = (dimensions.width - 2* manualPadding)/ nodesRepresentation.length\n        console.log(\"width\", dimensions.width)\n        \n        const svg = select(svgRef.current);\n        // svg.selectAll(\"*\").remove(); //Clear canvas so no duplicates are trailed every refresh\n            // centering workaround\n    svg.attr(\"viewBox\", [\n        -dimensions.width / 2,\n        -dimensions.height / 2,\n        dimensions.width,\n        dimensions.height\n      ]);\n\n  drawNodes(svg, nodesRepresentation, nodePositionFuncX, nodePositionFuncY)\n     // .attr(\"transform\", (d,i) => `translate(${d.x = }, ${d.y = 0 })`)\n\n      function nodePositionFuncX(i){\n        (-dimensions.width / 2  + manualPadding + nodeOffset/2 + i * nodeOffset)\n        return x\n      }\n      function nodePositionFuncY(i){\n        return 0\n      }\n\n      function boxMouseOver(event, d){\n        select(this).selectChild()\n        .attr(\"style\", \"fill:blue\");\n        setBoxToDropIn(d.id)\n        console.log(\"box over\")\n        console.log(boxToDropIn)\n        console.log(d.id)\n\n      }\n      function boxMouseOut(Event, d){\n        select(this).selectChild()\n        .attr(\"style\", \"fill:lightgrey\");\n        setBoxToDropIn(\"\")\n        console.log(\"box out\")\n        console.log(boxToDropIn)\n\n      }\n        function dragstarted(event, d) {\n          select(this).raise().attr(\"stroke\", \"black\")\n          .style(\"pointer-events\", \"none\");\n        }\n      \n        function dragged(event, d) {\n          select(this)\n          .attr(\"transform\", () => `translate(${d.x = event.x}, ${d.y = event.y })`)\n\n        }\n      \n        function dragended(event, d) {\n          select(this).attr(\"stroke\", null)\n          //.style(\"pointer-events\", \"auto\");\n          console.log(\"dragended\")\n          console.log(boxToDropIn)\n          if(boxToDropIn != \"\"){ //select prob still doesn t work... \n            // select(boxToDropIn).selectChild()\n            // .style(\"pointer-events\", \"none\")\n            // .attr(\"style\", \"fill:red\")\n            // .attr(\"height\", 200);\n            console.log(\"inside if\")\n            const mycolor = boxes.filter(box => {\n              if(box.id == boxToDropIn)return box.nodeColor})\n              console.log(\"color \" + mycolor)\n            select(this)\n            .attr(\"fill\", mycolor)\n\n          }\n\n        }\n      \n\n      \n      const boxes = [{id: \"1\", nodeColor: \"ffa500\"},{id: \"22\", nodeColor: \"ffa500\"},{id: \"333\", nodeColor: \"ffa500\"}, {id: \"4444444\", nodeColor: \"ffa500\"}]\n      const manualPaddingBox = 50 //this is extra for outer pad. total outer pad is manual + inner\n      const maybeInnerPad = 50\n      const boxOffset = (dimensions.width - 2* manualPaddingBox)/ boxes.length\n      const boxWidth = (dimensions.width - 2*manualPaddingBox - maybeInnerPad*(boxes.length-1))/ boxes.length\n      const dropBox = svg\n      .selectAll(\".dropBox\")\n      .data(boxes, d => d.id)\n      .join(\"g\")  //a che serve sto join\n      .attr('class', 'dropBox')\n      .attr(\"transform\", (d,i) => `translate(${d.x = (-boxWidth/2 -dimensions.width / 2  + manualPaddingBox + boxOffset/2 + i * boxOffset)}, ${d.y = 100 })`)\n      .on(\"mouseover\", boxMouseOver)\n      .on(\"mouseout\", boxMouseOut)\n\n      const boxRect = dropBox.append(\"rect\")\t\t// pre-defined shape\n      .attr(\"style\", \"fill:lightgrey\")\t// fill color of shape\n        //.attr(\"x\", x)\t\t\t\t\t\t\t\t// displacement from origin\n        //.attr(\"y\", y)\t\t\t\t\t\t\t\t// displacement from origin\n        .attr(\"rx\", 25)\t\t\t\t\t\t\t\t// how much to round corners - to be transitioned below\n        .attr(\"ry\", 25)\t\t\t\t\t\t\t\t// how much to round corners - to be transitioned below\n        .attr(\"width\", boxWidth)\t\t\t\t\t\t// size of shape\n        .attr(\"height\", 150);\n        \n      dropBox.append(\"text\")\n        .join(\"g\")\n        .text(d => d.id)\n        .attr(\"x\", boxWidth/2)\n        .attr('text-anchor', 'middle')\n        .attr('alignment-baseline', 'middle')\n        .style('fill', '#000')\n        .style('font-size', '20px');\n      \n      const simulation = forceSimulation(nodesRepresentation)\n\n      simulation.on(\"tick\", () => {\n         \n      //  // .attr(\"x\", d => (d.index * nodeOffset) + manualPadding - ( -dimensions.width / 2))\n      //   //.attr(\"transform\", d => `translate(${ -((d.index * nodeOffset) + manualPadding - (dimensions.width / 2))}, ${d.selected ? d.y : 100 })`);\n         \n\n        //console.log(\"simulation nodes \", nodes)\n      });\n      }, [nodesRepresentation, dimensions]); //TODO check if this nodes param here is right and what it does...\n\n        return(\n                <Box fill={true} ref={wrapperRef}  pad=\"small\" height=\"xxlarge\">\n                    <svg ref={svgRef}></svg>\n                </Box>\n        )\n}\n\nfunction drawNodes(svg, data, xfunc, yfunc ){\n  const node = svg\n  .selectAll(\".node\")\n  .data(data)\n  .join(\"g\")\n  .attr('class', 'node')\n  .attr(\"transform\", (d,i) => `translate(${d.x = xfunc(i)}, ${d.y = yfunc(i) })`)\n  .call(drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended));\n\n\nnode.append('circle')\n  //.join(\"g\")\n  .attr(\"r\", CIRCLE_RADIUS)\n  .attr(\"fill\", function (d) { return '#5b8075'; });  \n\n\nnode.append(\"text\")\n  //.join(\"g\")\n  .text(d => d.id)\n  .attr('text-anchor', 'middle')\n  .attr('alignment-baseline', 'middle')\n  .style('fill', '#000')\n  .style('font-size', '20px');\n  return node \n}"]},"metadata":{},"sourceType":"module"}