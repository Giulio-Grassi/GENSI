{"ast":null,"code":"var _jsxFileName = \"/Users/gg/dev/egoSurveyReact/egoSurveyReact/src/components/gensiForm.jsx\",\n    _s = $RefreshSig$();\n\n/**\n * This components handles the top level state of the form that we will ultimately submit.\n * This component is basically the entry point of the GENSI application\n * Every \"page\" saves their state in this parent component.\n * This is a simple multi-page form architecture. \n */\nimport React, { Component } from 'react';\nimport ParagraphPage from './paragraphPage';\nimport NodeCreationFunction from './nodeCreationFunction';\nimport NodeRow from './nodeRow';\nimport LineBox from './dragDrop/lineBox';\nimport MCQ from './mcq';\nimport ButtonFooter from './buttonFooter';\nimport { Box } from 'grommet';\nimport { Node } from './models/node';\nimport { Table } from './models/table';\nimport { Question } from './models/question';\nimport { Text, Button } from \"grommet\";\nimport QuestionStrategy from './questionStrategy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GensiForm() {\n  _s();\n\n  const [step, setStep] = React.useState(1); //   const [nodes[], setNodes] = React.useState('');\n\n  const [nodes, setNodes] = React.useState([new Node(\"You\", 0, 0, true)]); //Array of nodes. 0 and 0 are attributes fx and fx that used by d3 to fix a node in positon\n\n  const [questions, setQuestion] = React.useState([new Question(0, \"WHO YOU LIKE THE MOST?\"), new Question(1, \"WHO IS THE FUNNIEST?\")]); //React state containing the array of questions\n\n  const [table, setTable] = React.useState(new Table()); //State containing the MxN relationship table\n  // Proceed to next step\n\n  function nextStep() {\n    setStep(step + 1);\n  }\n\n  ; // Go back to prev step\n\n  function prevStep() {\n    setStep(step - 1);\n  }\n\n  ;\n\n  function createNode(nodeName) {\n    //IMPORTANT AS ALL THE USESTATES NEED TO BE INITIALISED \n    setNodes([...nodes, new Node(nodeName, 0, 0)]);\n  }\n\n  function populateTable() {\n    for (var i = 0; i < questions.length; i++) {\n      for (var k = 0; k < nodes.length; k++) {\n        table.insertRelation(questions[i].getId(), nodes[k].getName(), false);\n      }\n    }\n\n    console.log(\"populateTable\", table.getAll());\n  }\n\n  function renderPageBaseOnStep() {\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          id: \"case 1 box\",\n          fill: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(ParagraphPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonFooter, {\n            onNext: nextStep,\n            onPrev: prevStep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          id: \"case 2 box\",\n          fill: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(NodeCreationFunction, {\n            nodes: nodes,\n            onNodeCreation: createNode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonFooter, {\n            onNext: () => {\n              populateTable();\n              nextStep();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          id: \"case 3 box\",\n          fill: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(LineBox, {\n            nodes: nodes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonFooter, {\n            onNext: () => nextStep(),\n            onPrev: () => prevStep()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this);\n\n      case 4:\n        /*return (\n          <Box id=\"case 3 box\" fill= \"vertical\">\n            <Text>Dioacnae</Text>\n          <NodeRow\n          nodes={nodes}\n          questions={questions}\n          table={table}\n          setTable={setTable}\n          filterYou={true}\n          />\n          <ButtonFooter\n          onNext = {nextStep()}\n          /> \n          </Box>\n         );*/\n        return /*#__PURE__*/_jsxDEV(QuestionStrategy, {\n          nodes: nodes,\n          questions: questions,\n          table: table,\n          setTable: setTable,\n          superNext: () => nextStep()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this);\n\n      case 5:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          id: \"case 4 box\",\n          fill: \"vertical\",\n          children: /*#__PURE__*/_jsxDEV(MCQ, {\n            titles: ['choice 1', 'choice 2', 'choice 3']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this);\n      //  case 5:\n      //   return <Success />;\n\n      default:\n        console.log('This is a multi-step form built with React.');\n    }\n  }\n\n  return renderPageBaseOnStep();\n}\n\n_s(GensiForm, \"aIWkU2JA3wwIH3XUq2i32B4kXDo=\");\n\n_c = GensiForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GensiForm\");","map":{"version":3,"sources":["/Users/gg/dev/egoSurveyReact/egoSurveyReact/src/components/gensiForm.jsx"],"names":["React","Component","ParagraphPage","NodeCreationFunction","NodeRow","LineBox","MCQ","ButtonFooter","Box","Node","Table","Question","Text","Button","QuestionStrategy","GensiForm","step","setStep","useState","nodes","setNodes","questions","setQuestion","table","setTable","nextStep","prevStep","createNode","nodeName","populateTable","i","length","k","insertRelation","getId","getName","console","log","getAll","renderPageBaseOnStep"],"mappings":"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","sourcesContent":["/**\n * This components handles the top level state of the form that we will ultimately submit.\n * This component is basically the entry point of the GENSI application\n * Every \"page\" saves their state in this parent component.\n * This is a simple multi-page form architecture. \n */\nimport React, { Component } from 'react';\nimport ParagraphPage from './paragraphPage'\nimport NodeCreationFunction from './nodeCreationFunction'\nimport NodeRow from './nodeRow';\nimport LineBox from './dragDrop/lineBox';\nimport MCQ from './mcq'\nimport ButtonFooter from './buttonFooter'\nimport { Box } from 'grommet';\nimport { Node } from './models/node';\nimport { Table } from './models/table';  \nimport { Question } from './models/question';  \nimport { Text, Button } from \"grommet\";\nimport QuestionStrategy from './questionStrategy';\n\n\nexport default function GensiForm() {\n  const [step, setStep] = React.useState(1)\n\n  //   const [nodes[], setNodes] = React.useState('');\n  const [nodes, setNodes] = React.useState([new Node(\"You\", 0, 0, true)]); //Array of nodes. 0 and 0 are attributes fx and fx that used by d3 to fix a node in positon\n  const [questions, setQuestion] = React.useState([new Question(0, \"WHO YOU LIKE THE MOST?\"), new Question(1, \"WHO IS THE FUNNIEST?\")]); //React state containing the array of questions\n  const [table, setTable] = React.useState(new Table()); //State containing the MxN relationship table\n\n\n  // Proceed to next step\n  function nextStep(){\n    setStep(step + 1);\n  };\n\n  // Go back to prev step\n  function prevStep(){\n    setStep(step - 1);\n  };\n\n  function createNode(nodeName) { //IMPORTANT AS ALL THE USESTATES NEED TO BE INITIALISED \n     setNodes(\n        [...nodes,\n        new Node(nodeName, 0, 0)]\n        );\n  }\n\n  function populateTable(){\n    for(var i = 0; i < questions.length; i++){\n      for(var k = 0; k < nodes.length; k++){\n        table.insertRelation(questions[i].getId(), nodes[k].getName(), false)\n      }\n    }\n    console.log(\"populateTable\", table.getAll())\n  }\n\n  function renderPageBaseOnStep(){\n    switch (step) {\n        case 1:\n          return ( <Box id=\"case 1 box\" fill= \"vertical\" >\n            <ParagraphPage\n            />\n            <ButtonFooter\n            onNext = {nextStep}\n            onPrev = {prevStep}\n            /> \n            </Box>\n          );\n        case 2:\n          return (\n            <Box  id=\"case 2 box\" fill= \"vertical\">\n            <NodeCreationFunction\n              nodes={nodes}\n              onNodeCreation={createNode}\n            />\n            <ButtonFooter\n            onNext = {() => {\n              populateTable();\n              nextStep();\n            }}\n            /> \n            </Box>\n            );\n        case 3: \n          return (\n          <Box id=\"case 3 box\" fill= \"vertical\">\n            <LineBox\n              nodes={nodes}\n            />\n            <ButtonFooter\n            onNext = {() => nextStep()}\n            onPrev = {() => prevStep()}\n            /> \n          </Box>\n          );\n        case 4:\n          /*return (\n            <Box id=\"case 3 box\" fill= \"vertical\">\n              <Text>Dioacnae</Text>\n            <NodeRow\n            nodes={nodes}\n            questions={questions}\n            table={table}\n            setTable={setTable}\n            filterYou={true}\n            />\n            <ButtonFooter\n            onNext = {nextStep()}\n            /> \n            </Box>\n\n          );*/\n          return (\n              <QuestionStrategy\n              nodes={nodes}\n              questions={questions}\n              table={table}\n              setTable={setTable}\n              superNext={() => nextStep()}\n              />\n          );\n         case 5:\n           return(\n            <Box id=\"case 4 box\" fill= \"vertical\">\n              <MCQ\n              titles= {['choice 1', 'choice 2', 'choice 3']}\n              />\n              </Box>\n);\n          //  case 5:\n          //   return <Success />;\n        default:\n          (console.log('This is a multi-step form built with React.'))\n      }\n}\n  return renderPageBaseOnStep()\n    \n  }"]},"metadata":{},"sourceType":"module"}