{"ast":null,"code":"var _jsxFileName = \"/Users/gg/dev/egoSurveyReact/egoSurveyReact/src/components/gensiForm.jsx\",\n    _s = $RefreshSig$();\n\n/**\n * This components handles the top level state of the form that we will ultimately submit.\n * This component is basically the entry point of the GENSI application\n * Every \"page\" saves their state in this parent component.\n * This is a simple multi-page form architecture. \n */\nimport React, { Component } from 'react';\nimport ParagraphPage from './paragraphPage';\nimport NodeCreationFunction from './nodeCreationFunction';\nimport ButtonFooter from './buttonFooter';\nimport { Box } from 'grommet';\nimport { Node } from './models/node';\nimport { Table } from './models/table';\nimport { Question } from './models/question';\nimport { Grommet, Text, Button } from \"grommet\";\nimport QuestionStrategy from './questionStrategy';\nimport myquestions from './config/questions';\nimport './assets/css/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GensiForm(props) {\n  _s();\n\n  const [step, setStep] = React.useState(1); //   const [nodes[], setNodes] = React.useState('');\n\n  const [nodes, setNodes] = React.useState([new Node(\"You\", 0, 200, true)]); //Array of nodes. 0 and 0 are attributes fx and fx that used by d3 to fix a node in positon\n  //   question initaliser from json\n\n  const myquestionsvar = myquestions();\n  const questionArray = myquestionsvar.map(q => new Question(q));\n  const [questions, setQuestion] = React.useState(questionArray); //React state containing the array of questions\n\n  const [table, setTable] = React.useState(new Table()); //State containing the MxN relationship table\n  // Proceed to next step\n\n  function nextStep() {\n    setStep(step + 1);\n  }\n\n  ; // Go back to prev step\n\n  ;\n\n  function createNode(nodeName) {\n    //IMPORTANT AS ALL THE USESTATES NEED TO BE INITIALISED\n    if (nodeName && nodeName.length > 0) {\n      const findPotentialDuplicate = nodes.filter(x => x.getName() === nodeName);\n\n      if (findPotentialDuplicate.length === 0) {\n        setNodes([...nodes, new Node(nodeName, 0, 0)]);\n      }\n    }\n  }\n\n  function populateTable() {\n    for (var i = 0; i < questions.length; i++) {\n      if (questions[i].getType() === 'mcq') {\n        table.insertRelation(questions[i].getId(), nodes[0].getName(), false);\n        continue;\n      }\n\n      for (var k = 0; k < nodes.length; k++) {\n        table.insertRelation(questions[i].getId(), nodes[k].getName(), false);\n      }\n    }\n\n    console.log(\"populateTable\", table.getAll());\n  }\n\n  function renderPageBaseOnStep() {\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          id: \"case 1 box\",\n          fill: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(ParagraphPage, {\n            sentence: \"GENSI  is  \\u2197\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonFooter, {\n            onNext: nextStep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          id: \"case 2 box\",\n          fill: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(NodeCreationFunction, {\n            nodes: nodes,\n            onNodeCreation: createNode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonFooter, {\n            onNext: () => {\n              populateTable();\n              nextStep();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(QuestionStrategy, {\n          nodes: nodes,\n          setNodes: setNodes,\n          questions: questions,\n          table: table,\n          setTable: setTable,\n          superNext: () => nextStep(),\n          darkMode: props.darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          id: \"paragraph page\",\n          fill: \"vertical\",\n          justify: \"center\",\n          align: \"center\",\n          pad: \"small\",\n          height: \"medium\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            size: \"xxxlarge\",\n            className: \"title\",\n            children: \"Thanks for taking the survey.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"flip\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"See ya :)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Arrivederci\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Adios!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this);\n\n      default:\n        console.log('This is a multi-step form built with React. And this step number is not supported!');\n    }\n  }\n\n  return renderPageBaseOnStep();\n}\n\n_s(GensiForm, \"lBO2/XMT+MdHx0TbR1FvoB1xWdA=\");\n\n_c = GensiForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GensiForm\");","map":{"version":3,"sources":["/Users/gg/dev/egoSurveyReact/egoSurveyReact/src/components/gensiForm.jsx"],"names":["React","Component","ParagraphPage","NodeCreationFunction","ButtonFooter","Box","Node","Table","Question","Grommet","Text","Button","QuestionStrategy","myquestions","GensiForm","props","step","setStep","useState","nodes","setNodes","myquestionsvar","questionArray","map","q","questions","setQuestion","table","setTable","nextStep","createNode","nodeName","length","findPotentialDuplicate","filter","x","getName","populateTable","i","getType","insertRelation","getId","k","console","log","getAll","renderPageBaseOnStep","darkMode"],"mappings":"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","sourcesContent":["/**\n * This components handles the top level state of the form that we will ultimately submit.\n * This component is basically the entry point of the GENSI application\n * Every \"page\" saves their state in this parent component.\n * This is a simple multi-page form architecture. \n */\nimport React, { Component } from 'react';\nimport ParagraphPage from './paragraphPage'\nimport NodeCreationFunction from './nodeCreationFunction'\nimport ButtonFooter from './buttonFooter'\nimport { Box } from 'grommet';\nimport { Node } from './models/node';\nimport { Table } from './models/table';  \nimport { Question } from './models/question';  \nimport { Grommet, Text, Button } from \"grommet\";\nimport QuestionStrategy from './questionStrategy';\nimport myquestions from './config/questions'\nimport './assets/css/styles.css'\n\n\nexport default function GensiForm(props) {\n  const [step, setStep] = React.useState(1)\n  //   const [nodes[], setNodes] = React.useState('');\n  const [nodes, setNodes] = React.useState([new Node(\"You\", 0, 200, true)]); //Array of nodes. 0 and 0 are attributes fx and fx that used by d3 to fix a node in positon\n  //   question initaliser from json\n  const myquestionsvar = myquestions()\n  const questionArray = myquestionsvar.map(q => new Question(q))\n  const [questions, setQuestion] = React.useState(questionArray); //React state containing the array of questions\n  const [table, setTable] = React.useState(new Table()); //State containing the MxN relationship table\n  \n  // Proceed to next step\n  function nextStep(){\n    setStep(step + 1);\n  };\n\n  // Go back to prev step\n;\n\n  function createNode(nodeName) { //IMPORTANT AS ALL THE USESTATES NEED TO BE INITIALISED\n    if(nodeName && nodeName.length > 0){\n      const findPotentialDuplicate = nodes.filter(x => x.getName() === nodeName)\n      if(findPotentialDuplicate.length === 0){\n        setNodes([...nodes,  new Node(nodeName, 0, 0)])\n      }\n    }\n  }\n\n  function populateTable(){\n    for(var i = 0; i < questions.length; i++){\n      if(questions[i].getType()==='mcq'){\n        table.insertRelation(questions[i].getId(), nodes[0].getName(), false)\n        continue\n      }\n      for(var k = 0; k < nodes.length; k++){\n        table.insertRelation(questions[i].getId(), nodes[k].getName(), false)\n      }\n    }\n    console.log(\"populateTable\", table.getAll())\n  }\n\n  function renderPageBaseOnStep(){\n    switch (step) {\n        case 1:\n          return ( <Box id=\"case 1 box\" fill= \"vertical\" >\n            <ParagraphPage sentence=\"GENSI  is  ↗\"/>\n            <ButtonFooter\n              onNext = {nextStep}\n            /> \n            </Box>\n          );\n        case 2:\n          return (\n            <Box  id=\"case 2 box\" fill= \"vertical\">\n            <NodeCreationFunction\n              nodes={nodes}\n              onNodeCreation={createNode}\n            />\n            <ButtonFooter\n            onNext = {() => {\n              populateTable();\n              nextStep();\n            }}\n            /> \n            </Box>\n            );\n        case 3:\n          return (\n              <QuestionStrategy\n                nodes={nodes}\n                setNodes={setNodes}\n                questions={questions}\n                table={table}\n                setTable={setTable}\n                superNext={() => nextStep()}\n                darkMode={props.darkMode}\n              />\n          );\n          case 4:\n            return (\n              <Box id=\"paragraph page\" fill= \"vertical\" justify=\"center\" align=\"center\" pad= \"small\" height=\"medium\" >\n                  <Text size=\"xxxlarge\" className=\"title\">\n                      Thanks for taking the survey.\n                  </Text>\n                  <div id=\"flip\">\n                      <div><div>See ya :)</div></div>\n                      <div><div>Arrivederci</div></div>\n                      <div><div>Adios!</div></div>\n                  </div>\n              </Box>\n            );\n        default:\n          (console.log('This is a multi-step form built with React. And this step number is not supported!'))\n      }\n}\n  return renderPageBaseOnStep()\n  }"]},"metadata":{},"sourceType":"module"}