{"ast":null,"code":"var _jsxFileName = \"/Users/gg/dev/egoSurveyReact/egoSurveyReact/src/components/nodeCreationFunction.jsx\",\n    _s = $RefreshSig$();\n\n/**\n * TODO add a garbage bin in case of an incorrect node or just like a double click to delete\n */\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, DataTable, Button, Layer, Heading, TextInput } from \"grommet\";\nimport { select, forceSimulation, forceManyBody, forceCollide, forceCenter } from 'd3';\nimport useResizeObserver from './useResizeObserver';\nimport { forceLink } from 'd3-force';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NodeCreationPage({\n  nodes,\n  onNodeCreation //callback that gets triggered when the button confirm name button is pressed and a new node should be added\n\n}) {\n  _s();\n\n  const [nodeName, setNodeName] = React.useState('');\n  const [links, setLinks] = React.useState([]);\n  const [nodesRepresentation, setNodesRepresentation] = React.useState(nodes.map(x => {\n    if (x.getIsFixed()) {\n      return {\n        \"id\": x.getName(),\n        \"fx\": x.getX(),\n        \"fy\": x.getY()\n      };\n    } else {\n      return {\n        \"id\": x.getName()\n      };\n    }\n  }));\n\n  function updateRepresentation() {\n    setNodesRepresentation(nodes.map(x => {\n      if (x.getIsFixed()) {\n        return {\n          \"id\": x.getName(),\n          \"fx\": x.getX(),\n          \"fy\": x.getY()\n        };\n      } else {\n        return {\n          \"id\": x.getName()\n        };\n      }\n    }));\n    /*setLinks(\n        [...links,\n        {\"source\": 0, \"target\": nodes.length-1}]\n        ); //0 is the hardcoded value for \"You\"*/\n\n    console.log(\"nodesRepresentation\", nodesRepresentation);\n    console.log(\"links\", links);\n  }\n\n  const svgRef = useRef(); //gets a ref for the svg in which d3 renders in \n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef); //used to resize \n\n  useEffect(() => {\n    updateRepresentation();\n    setLinks([...links, {\n      \"source\": 0,\n      \"target\": nodes.length - 1\n    }]);\n  }, [nodes]); // will be called initially and on every data change\n\n  useEffect(() => {\n    console.log(\"current dimension \", dimensions);\n    if (!dimensions) return; // console.log(\"current nodes \", nodes)\n    // console.log(\"current links \", links)\n\n    const svg = select(svgRef.current); // centering workaround\n\n    svg.attr(\"viewBox\", [-dimensions.width / 2, -dimensions.height / 2, dimensions.width, dimensions.height]);\n    const link = svg.attr(\"stroke\", \"#999\").attr(\"stroke-opacity\", 0.6).selectAll(\"line\").data(links).join(\"line\").attr(\"stroke-width\", d => Math.sqrt(d.value));\n    const node = svg.selectAll(\".node\").data(nodesRepresentation).join(\"g\").attr('class', 'node');\n    node.append('circle').join(\"g\").attr(\"r\", 30).attr(\"fill\", function (d) {\n      return '#ABEBC6';\n    });\n    node.append(\"text\").text(d => d.id).attr('text-anchor', 'middle').attr('alignment-baseline', 'middle').style('fill', '#000').style('font-size', '20px');\n    console.log(\"nodesRepresentation\", nodesRepresentation);\n    console.log(\"simulation\", forceSimulation(nodesRepresentation));\n    const simulation = forceSimulation(nodesRepresentation).force(\"charge\", forceManyBody().strength(-40)).force(\"collide\", forceCollide(80)) // .force(\"center\", forceCenter())\n    .force(\"link\", forceLink(links));\n    simulation.on(\"tick\", () => {\n      link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n      node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n  }, [nodesRepresentation, links, dimensions]); //TODO check if this nodes param here is right and what it does...\n\n  function createNode() {\n    onNodeCreation(nodeName);\n    /*updateRepresentation()\n    setLinks(\n        [...links,\n        {\"source\": 0, \"target\": nodes.length-1}]\n        );*/\n\n    setNodeName('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"nodeCreation box\",\n    fill: \"vertical\",\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"type here\",\n      value: nodeName,\n      onChange: event => setNodeName(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      label: \"Confirm Name\",\n      onClick: () => createNode()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      id: \"SVG wrap\",\n      fill: true,\n      ref: wrapperRef,\n      pad: \"small\",\n      height: \"xxlarge\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NodeCreationPage, \"T8f22i+lcz+Ol79fIOSS/pX68iE=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = NodeCreationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NodeCreationPage\");","map":{"version":3,"sources":["/Users/gg/dev/egoSurveyReact/egoSurveyReact/src/components/nodeCreationFunction.jsx"],"names":["React","useState","useEffect","useRef","Box","DataTable","Button","Layer","Heading","TextInput","select","forceSimulation","forceManyBody","forceCollide","forceCenter","useResizeObserver","forceLink","NodeCreationPage","nodes","onNodeCreation","nodeName","setNodeName","links","setLinks","nodesRepresentation","setNodesRepresentation","map","x","getIsFixed","getName","getX","getY","updateRepresentation","console","log","svgRef","wrapperRef","dimensions","length","svg","current","attr","width","height","link","selectAll","data","join","d","Math","sqrt","value","node","append","text","id","style","simulation","force","strength","on","source","y","target","createNode","event"],"mappings":";;;AAAA;AACA;AACA;AACC,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAkD,OAAlD;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,OAAxC,EAAiDC,SAAjD,QAAkE,SAAlE;AACD,SAAQC,MAAR,EAAgBC,eAAhB,EAAiCC,aAAjC,EAAgDC,YAAhD,EAA8DC,WAA9D,QAAiF,IAAjF;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAGA,eAAe,SAASC,gBAAT,CAA0B;AACrCC,EAAAA,KADqC;AAErCC,EAAAA,cAFqC,CAEtB;;AAFsB,CAA1B,EAGZ;AAAA;;AAEC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BrB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBvB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACuB,mBAAD,EAAsBC,sBAAtB,IAAgDzB,KAAK,CAACC,QAAN,CAAeiB,KAAK,CAACQ,GAAN,CAAWC,CAAD,IAAO;AAClF,QAAGA,CAAC,CAACC,UAAF,EAAH,EAAkB;AACd,aAAO;AACH,cAAMD,CAAC,CAACE,OAAF,EADH;AAEH,cAAMF,CAAC,CAACG,IAAF,EAFH;AAGH,cAAMH,CAAC,CAACI,IAAF;AAHH,OAAP;AAKH,KAND,MAOI;AACA,aAAO;AACH,cAAMJ,CAAC,CAACE,OAAF;AADH,OAAP;AAGH;AACJ,GAboE,CAAf,CAAtD;;AAeA,WAASG,oBAAT,GAA+B;AAC3BP,IAAAA,sBAAsB,CAACP,KAAK,CAACQ,GAAN,CAAWC,CAAD,IAAO;AACpC,UAAGA,CAAC,CAACC,UAAF,EAAH,EAAkB;AACd,eAAO;AACH,gBAAMD,CAAC,CAACE,OAAF,EADH;AAEH,gBAAMF,CAAC,CAACG,IAAF,EAFH;AAGH,gBAAMH,CAAC,CAACI,IAAF;AAHH,SAAP;AAKH,OAND,MAOI;AACA,eAAO;AACH,gBAAMJ,CAAC,CAACE,OAAF;AADH,SAAP;AAGH;AACJ,KAbsB,CAAD,CAAtB;AAeA;AACR;AACA;AACA;;AAEQI,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCV,mBAAnC;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBZ,KAArB;AACH;;AACD,QAAMa,MAAM,GAAGhC,MAAM,EAArB,CA3CD,CA2C0B;;AACzB,QAAMiC,UAAU,GAAGjC,MAAM,EAAzB;AACA,QAAMkC,UAAU,GAAGtB,iBAAiB,CAACqB,UAAD,CAApC,CA7CD,CA6CmD;;AAElDlC,EAAAA,SAAS,CAAC,MAAM;AACZ8B,IAAAA,oBAAoB;AACpBT,IAAAA,QAAQ,CACJ,CAAC,GAAGD,KAAJ,EACA;AAAC,gBAAU,CAAX;AAAc,gBAAUJ,KAAK,CAACoB,MAAN,GAAa;AAArC,KADA,CADI,CAAR;AAIH,GANQ,EAMN,CAACpB,KAAD,CANM,CAAT,CA/CD,CAuDG;;AACFhB,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCG,UAAlC;AAEE,QAAI,CAACA,UAAL,EAAiB,OAHL,CAIZ;AACA;;AAEA,UAAME,GAAG,GAAG7B,MAAM,CAACyB,MAAM,CAACK,OAAR,CAAlB,CAPY,CASR;;AACRD,IAAAA,GAAG,CAACE,IAAJ,CAAS,SAAT,EAAoB,CAChB,CAACJ,UAAU,CAACK,KAAZ,GAAoB,CADJ,EAEhB,CAACL,UAAU,CAACM,MAAZ,GAAqB,CAFL,EAGhBN,UAAU,CAACK,KAHK,EAIhBL,UAAU,CAACM,MAJK,CAApB;AAOF,UAAMC,IAAI,GAAGL,GAAG,CACXE,IADQ,CACH,QADG,EACO,MADP,EAERA,IAFQ,CAEH,gBAFG,EAEe,GAFf,EAGRI,SAHQ,CAGE,MAHF,EAIRC,IAJQ,CAIHxB,KAJG,EAKRyB,IALQ,CAKH,MALG,EAMRN,IANQ,CAMH,cANG,EAMaO,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUF,CAAC,CAACG,KAAZ,CANlB,CAAb;AAQA,UAAMC,IAAI,GAAGb,GAAG,CACXM,SADQ,CACE,OADF,EAERC,IAFQ,CAEHtB,mBAFG,EAGRuB,IAHQ,CAGH,GAHG,EAIRN,IAJQ,CAIH,OAJG,EAIM,MAJN,CAAb;AAMAW,IAAAA,IAAI,CAACC,MAAL,CAAY,QAAZ,EACKN,IADL,CACU,GADV,EAEKN,IAFL,CAEU,GAFV,EAEe,EAFf,EAGKA,IAHL,CAGU,MAHV,EAGkB,UAAUO,CAAV,EAAa;AAAE,aAAO,SAAP;AAAmB,KAHpD;AAMAI,IAAAA,IAAI,CAACC,MAAL,CAAY,MAAZ,EACKC,IADL,CACUN,CAAC,IAAIA,CAAC,CAACO,EADjB,EAEKd,IAFL,CAEU,aAFV,EAEyB,QAFzB,EAGKA,IAHL,CAGU,oBAHV,EAGgC,QAHhC,EAIKe,KAJL,CAIW,MAJX,EAImB,MAJnB,EAKKA,KALL,CAKW,WALX,EAKwB,MALxB;AAOIvB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCV,mBAAnC;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BvB,eAAe,CAACa,mBAAD,CAAzC;AACA,UAAMiC,UAAU,GAAG9C,eAAe,CAACa,mBAAD,CAAf,CAClBkC,KADkB,CACZ,QADY,EACF9C,aAAa,GAAG+C,QAAhB,CAAyB,CAAC,EAA1B,CADE,EAElBD,KAFkB,CAEZ,SAFY,EAED7C,YAAY,CAAC,EAAD,CAFX,EAGnB;AAHmB,KAIlB6C,KAJkB,CAIZ,MAJY,EAIJ1C,SAAS,CAACM,KAAD,CAJL,CAAnB;AAMJmC,IAAAA,UAAU,CAACG,EAAX,CAAc,MAAd,EAAsB,MAAM;AAC1BhB,MAAAA,IAAI,CACCH,IADL,CACU,IADV,EACgBO,CAAC,IAAIA,CAAC,CAACa,MAAF,CAASlC,CAD9B,EAEKc,IAFL,CAEU,IAFV,EAEgBO,CAAC,IAAIA,CAAC,CAACa,MAAF,CAASC,CAF9B,EAGKrB,IAHL,CAGU,IAHV,EAGgBO,CAAC,IAAIA,CAAC,CAACe,MAAF,CAASpC,CAH9B,EAIKc,IAJL,CAIU,IAJV,EAIgBO,CAAC,IAAIA,CAAC,CAACe,MAAF,CAASD,CAJ9B;AAMAV,MAAAA,IAAI,CACCX,IADL,CACU,WADV,EACuBO,CAAC,IAAK,aAAYA,CAAC,CAACrB,CAAE,KAAIqB,CAAC,CAACc,CAAE,GADrD;AAED,KATD;AAWK,GA/DM,EA+DJ,CAACtC,mBAAD,EAAsBF,KAAtB,EAA6Be,UAA7B,CA/DI,CAAT,CAxDD,CAuHiD;;AAGhD,WAAS2B,UAAT,GAAsB;AAClB7C,IAAAA,cAAc,CAACC,QAAD,CAAd;AACA;AACR;AACA;AACA;AACA;;AACQC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH;;AAGG,sBACA,QAAC,GAAD;AAAK,IAAA,EAAE,EAAC,kBAAR;AAA2B,IAAA,IAAI,EAAE,UAAjC;AAAA,4BACQ,QAAC,SAAD;AACA,MAAA,WAAW,EAAC,WADZ;AAEA,MAAA,KAAK,EAAED,QAFP;AAGA,MAAA,QAAQ,EAAE6C,KAAK,IAAI5C,WAAW,CAAC4C,KAAK,CAACF,MAAN,CAAaZ,KAAd;AAH9B;AAAA;AAAA;AAAA;AAAA,YADR,eAOQ,QAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,KAAK,EAAC,cAAtB;AACA,MAAA,OAAO,EAAE,MAAMa,UAAU;AADzB;AAAA;AAAA;AAAA;AAAA,YAPR,eAUI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,IAAI,EAAE,IAAzB;AAA+B,MAAA,GAAG,EAAE5B,UAApC;AAAiD,MAAA,GAAG,EAAC,OAArD;AAA6D,MAAA,MAAM,EAAC,SAApE;AAAA,6BACI;AAAK,QAAA,GAAG,EAAED;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAiBP;;GAzJuBlB,gB;UAgDDF,iB;;;KAhDCE,gB","sourcesContent":["/**\n * TODO add a garbage bin in case of an incorrect node or just like a double click to delete\n */\n import React, { useState, useEffect, useRef} from 'react';\n import { Box, DataTable, Button, Layer, Heading, TextInput } from \"grommet\";\nimport {select, forceSimulation, forceManyBody, forceCollide, forceCenter,} from 'd3'\nimport useResizeObserver from './useResizeObserver'\nimport { forceLink } from 'd3-force';\n\n\nexport default function NodeCreationPage({\n    nodes,\n    onNodeCreation,//callback that gets triggered when the button confirm name button is pressed and a new node should be added\n}) {\n\n    const [nodeName, setNodeName] = React.useState('');\n    const [links, setLinks] = React.useState([])\n    const [nodesRepresentation, setNodesRepresentation] = React.useState(nodes.map((x) => {\n        if(x.getIsFixed()){\n            return {\n                \"id\": x.getName(),\n                \"fx\": x.getX(),\n                \"fy\": x.getY()\n            }\n        }\n        else{\n            return {\n                \"id\": x.getName()\n            }\n        }\n    }))\n\n    function updateRepresentation(){\n        setNodesRepresentation(nodes.map((x) => {\n            if(x.getIsFixed()){\n                return {\n                    \"id\": x.getName(),\n                    \"fx\": x.getX(),\n                    \"fy\": x.getY()\n                }\n            }\n            else{\n                return {\n                    \"id\": x.getName()\n                }\n            }\n        }))\n        \n        /*setLinks(\n            [...links,\n            {\"source\": 0, \"target\": nodes.length-1}]\n            ); //0 is the hardcoded value for \"You\"*/\n\n        console.log(\"nodesRepresentation\", nodesRepresentation)\n        console.log(\"links\", links)\n    }\n    const svgRef = useRef(); //gets a ref for the svg in which d3 renders in \n    const wrapperRef = useRef();\n    const dimensions = useResizeObserver(wrapperRef); //used to resize \n\n    useEffect(() => {\n        updateRepresentation()\n        setLinks(\n            [...links,\n            {\"source\": 0, \"target\": nodes.length-1}]\n            );\n    }, [nodes])\n\n      // will be called initially and on every data change\n    useEffect(() => {\n      console.log(\"current dimension \", dimensions)\n\n        if (!dimensions) return;\n        // console.log(\"current nodes \", nodes)\n        // console.log(\"current links \", links)\n\n        const svg = select(svgRef.current);\n\n            // centering workaround\n    svg.attr(\"viewBox\", [\n        -dimensions.width / 2,\n        -dimensions.height / 2,\n        dimensions.width,\n        dimensions.height\n      ]);\n\n  const link = svg\n      .attr(\"stroke\", \"#999\")\n      .attr(\"stroke-opacity\", 0.6)\n      .selectAll(\"line\")\n      .data(links)\n      .join(\"line\")\n      .attr(\"stroke-width\", d => Math.sqrt(d.value));\n\n  const node = svg\n      .selectAll(\".node\")\n      .data(nodesRepresentation)\n      .join(\"g\")\n      .attr('class', 'node')\n\n  node.append('circle')\n      .join(\"g\")\n      .attr(\"r\", 30)\n      .attr(\"fill\", function (d) { return '#ABEBC6'; })  \n\n\n  node.append(\"text\")\n      .text(d => d.id)\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle')\n      .style('fill', '#000')\n      .style('font-size', '20px')\n      \n      console.log(\"nodesRepresentation\", nodesRepresentation)\n      console.log(\"simulation\", forceSimulation(nodesRepresentation))\n      const simulation = forceSimulation(nodesRepresentation)\n      .force(\"charge\", forceManyBody().strength(-40))\n      .force(\"collide\", forceCollide(80))\n      // .force(\"center\", forceCenter())\n      .force(\"link\", forceLink(links))\n\n  simulation.on(\"tick\", () => {\n    link\n        .attr(\"x1\", d => d.source.x)\n        .attr(\"y1\", d => d.source.y)\n        .attr(\"x2\", d => d.target.x)\n        .attr(\"y2\", d => d.target.y);\n\n    node\n        .attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n  });\n\n      }, [nodesRepresentation, links, dimensions]); //TODO check if this nodes param here is right and what it does...\n\n\n    function createNode() {\n        onNodeCreation(nodeName);\n        /*updateRepresentation()\n        setLinks(\n            [...links,\n            {\"source\": 0, \"target\": nodes.length-1}]\n            );*/\n        setNodeName('');\n    }\n\n\n        return( \n        <Box id=\"nodeCreation box\" fill= \"vertical\">\n                <TextInput\n                placeholder=\"type here\"\n                value={nodeName}\n                onChange={event => setNodeName(event.target.value)}\n                />\n\n                <Button primary label=\"Confirm Name\"\n                onClick={() => createNode()} />\n\n            <Box id=\"SVG wrap\" fill={true} ref={wrapperRef}  pad=\"small\" height=\"xxlarge\">\n                <svg ref={svgRef}></svg>\n            </Box>\n        </Box>\n        )\n \n}"]},"metadata":{},"sourceType":"module"}