{"ast":null,"code":"var _jsxFileName = \"/Users/gg/dev/egoSurveyReact/egoSurveyReact/src/components/gensiForm.jsx\",\n    _s = $RefreshSig$();\n\n/**\n * This components handles the top level state of the form that we will ultimately submit.\n * This component is basically the entry point of the GENSI application\n * Every \"page\" saves their state in this parent component.\n * This is a simple multi-page form architecture. \n */\nimport React, { Component } from 'react';\nimport ParagraphPage from './paragraphPage';\nimport NodeCreationFunction from './nodeCreationFunction';\nimport NodeRow from './nodeRow';\nimport MCQ from './mcq';\nimport ButtonFooter from './buttonFooter';\nimport { Box } from 'grommet';\nimport { Node } from './models/node';\nimport { Table } from './models/table';\nimport { Question } from './models/question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GensiForm() {\n  _s();\n\n  const [step, setStep] = React.useState(1); //   const [nodes[], setNodes] = React.useState('');\n\n  const [nodes, setNodes] = React.useState([new Node(\"You\", 0, 0)]); //Array of nodes. 0 and 0 are attributes fx and fx that used by d3 to fix a node in positon\n\n  const [questions, setQuestion] = React.useState([new Question(1, \"WHO YOU LIKE THE MOST?\")]); //React state containing the array of questions\n\n  const [table, setTable] = React.useState(new Table()); //State containing the MxN relationship table\n\n  const [links, setLinks] = React.useState([]); //D3 links between the visual nodes.\n  // Proceed to next step\n\n  function nextStep() {\n    setStep(step + 1);\n  }\n\n  ; // Go back to prev step\n\n  function prevStep() {\n    setStep(step - 1);\n  }\n\n  ;\n\n  function createNode(nodeName) {\n    //IMPORTANT AS ALL THE USESTATES NEED TO BE INITIALISED \n    setNodes([...nodes, new Node(nodeName, 0, 0)]);\n    const latestNodeIndex = nodes.length; //MIGHT BE NOT SAFE DEPENDING ON THE UPDATE CYCLE. \"-1\" MAKES  IT DELAYED\n\n    setLinks([...links, {\n      \"source\": 0,\n      \"target\": latestNodeIndex\n    }]); //0 is the hardcoded value for \"You\"\n\n    console.log(\"NODES\", nodes);\n    console.log(\"LINKS\", links);\n  }\n\n  function populateTable() {\n    for (var i = 1; i <= questions.length; i++) {\n      for (var k = 1; k <= nodes.length; k++) {\n        table.insertRelation(i, k, false);\n      }\n    }\n  }\n\n  function renderPageBaseOnStep() {\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          id: \"case 1 box\",\n          fill: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(ParagraphPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonFooter, {\n            onNext: nextStep,\n            onPrev: prevStep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          id: \"case 2 box\",\n          fill: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(NodeCreationFunction, {\n            nodes: nodes,\n            links: links,\n            onNodeCreation: createNode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonFooter, {\n            onNext: (populateTable(), nextStep)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          id: \"case 3 box\",\n          fill: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(NodeRow, {\n            nodes: nodes,\n            questions: questions,\n            table: table,\n            filterYou: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonFooter, {\n            onNext: nextStep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          id: \"case 4 box\",\n          fill: \"vertical\",\n          children: /*#__PURE__*/_jsxDEV(MCQ, {\n            titles: ['choice 1', 'choice 2', 'choice 3']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this);\n      //  case 5:\n      //   return <Success />;\n\n      default:\n        console.log('This is a multi-step form built with React.');\n    }\n  }\n\n  return renderPageBaseOnStep();\n}\n\n_s(GensiForm, \"f8foi8RwoT/wj0I8SwUeORdho+k=\");\n\n_c = GensiForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GensiForm\");","map":{"version":3,"sources":["/Users/gg/dev/egoSurveyReact/egoSurveyReact/src/components/gensiForm.jsx"],"names":["React","Component","ParagraphPage","NodeCreationFunction","NodeRow","MCQ","ButtonFooter","Box","Node","Table","Question","GensiForm","step","setStep","useState","nodes","setNodes","questions","setQuestion","table","setTable","links","setLinks","nextStep","prevStep","createNode","nodeName","latestNodeIndex","length","console","log","populateTable","i","k","insertRelation","renderPageBaseOnStep"],"mappings":"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","sourcesContent":["/**\n * This components handles the top level state of the form that we will ultimately submit.\n * This component is basically the entry point of the GENSI application\n * Every \"page\" saves their state in this parent component.\n * This is a simple multi-page form architecture. \n */\nimport React, { Component } from 'react';\nimport ParagraphPage from './paragraphPage'\nimport NodeCreationFunction from './nodeCreationFunction'\nimport NodeRow from './nodeRow';\nimport MCQ from './mcq'\nimport ButtonFooter from './buttonFooter'\nimport { Box } from 'grommet';\nimport { Node } from './models/node';\nimport { Table } from './models/table';  \nimport { Question } from './models/question';  \n\n\nexport default function GensiForm() {\n  const [step, setStep] = React.useState(1)\n\n  //   const [nodes[], setNodes] = React.useState('');\n  const [nodes, setNodes] = React.useState([new Node(\"You\", 0, 0)]); //Array of nodes. 0 and 0 are attributes fx and fx that used by d3 to fix a node in positon\n  const [questions, setQuestion] = React.useState([new Question(1, \"WHO YOU LIKE THE MOST?\")]); //React state containing the array of questions\n  const [table, setTable] = React.useState(new Table()); //State containing the MxN relationship table\n  const [links, setLinks] = React.useState([]); //D3 links between the visual nodes.\n\n\n  // Proceed to next step\n  function nextStep(){\n    setStep(step + 1);\n  };\n\n  // Go back to prev step\n  function prevStep(){\n    setStep(step - 1);\n  };\n\n  function createNode(nodeName) { //IMPORTANT AS ALL THE USESTATES NEED TO BE INITIALISED \n     setNodes(\n        [...nodes,\n        new Node(nodeName, 0, 0)]\n        );\n    const latestNodeIndex = nodes.length;  //MIGHT BE NOT SAFE DEPENDING ON THE UPDATE CYCLE. \"-1\" MAKES  IT DELAYED\n    setLinks(\n        [...links,\n        {\"source\": 0, \"target\": latestNodeIndex}]\n        ); //0 is the hardcoded value for \"You\"\n\n        console.log(\"NODES\",nodes)\n        console.log(\"LINKS\",links)\n  }\n\n  function populateTable(){\n    for(var i = 1; i<=questions.length; i++){\n      for(var k = 1; k<=nodes.length; k++){\n        table.insertRelation(i, k, false)\n      }\n    }\n  }\n\n  function renderPageBaseOnStep(){\n    switch (step) {\n        case 1:\n          return ( <Box id=\"case 1 box\" fill= \"vertical\" >\n            <ParagraphPage\n            />\n            <ButtonFooter\n            onNext = {nextStep}\n            onPrev = {prevStep}\n            /> \n            </Box>\n          );\n        case 2:\n          return (\n            <Box  id=\"case 2 box\" fill= \"vertical\">\n            <NodeCreationFunction\n              nodes={nodes}\n              links={links}\n              onNodeCreation={createNode}\n            />\n            <ButtonFooter\n            onNext = {populateTable(),nextStep}\n            /> \n            </Box>\n            );\n        case 3: \n          return (\n            <Box id=\"case 3 box\" fill= \"vertical\">\n            <NodeRow\n            nodes={nodes}\n            questions={questions}\n            table={table}\n            filterYou={true}\n            />\n            <ButtonFooter\n            onNext = {nextStep}\n            /> \n            </Box>\n\n          );\n        \n         case 4:\n           return(\n            <Box id=\"case 4 box\" fill= \"vertical\">\n              <MCQ\n              titles= {['choice 1', 'choice 2', 'choice 3']}\n              />\n              </Box>\n);\n          //  case 5:\n          //   return <Success />;\n        default:\n          (console.log('This is a multi-step form built with React.'))\n      }\n}\n  return renderPageBaseOnStep()\n    \n  }"]},"metadata":{},"sourceType":"module"}